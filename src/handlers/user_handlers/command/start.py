from aio_pika import ExchangeType

from db.storage.rabbit import channel_pool
from src.handlers.user_handlers.command.router import router
from aiogram.types import Message
from aiogram.filters.command import CommandStart
from config.settings import settings

from src.keyboards.user_kb import start_kb


@router.message(CommandStart())
async def start_handler(message: Message):

    async with channel_pool.acquire() as channel:  # type: aio_pika.Channel
        exchange = await channel.declare_exchange("user_tasks", ExchangeType.TOPIC, durable=True)

        queue = await channel.declare_queue(
            settings.USER_TASK_QUEUE_TEMPLATE.format(
                user_id=message.from_user.id,
            ),
            durable=True,
        )

        await queue.bind(
            exchange,
            settings.USER_TASK_QUEUE_TEMPLATE.format(
                user_id=message.from_user.id,
            ),
        )

    txt = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Python! üêç</b>\n\n"
        "–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è –∏ —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω–∏ –≤–µ—Ä–Ω—ã.\n\n"
        "<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n"
        "1Ô∏è‚É£ <i>–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:</i> –ª–µ–≥–∫–∏–π, —Å—Ä–µ–¥–Ω–∏–π –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–π.\n"
        "2Ô∏è‚É£ –ü–æ–ª—É—á–∏ –∑–∞–¥–∞—á—É.\n"
        "3Ô∏è‚É£ –†–µ—à–∏ –µ—ë –∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –∫–æ–¥.\n"
        "4Ô∏è‚É£ –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏ —Å—Ä–∞–∑—É —Å–æ–æ–±—â–∏–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ–Ω–æ!\n\n"
        "<b>–ì–æ—Ç–æ–≤?</b> –ñ–º–∏ ¬´<b>–ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ</b>¬ª –∏ –Ω–∞—á–∏–Ω–∞–π –∫–æ–¥–∏—Ç—å! üíª‚ú®"
    )

    await message.answer(txt, reply_markup=start_kb, parse_mode='HTML')

